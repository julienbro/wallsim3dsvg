#!/usr/bin/env pwsh
# Script de validation pour l'impl√©mentation Hourdis axe Z

Write-Host "üîç Validation de l'impl√©mentation Hourdis - Axe Z" -ForegroundColor Cyan
Write-Host "=" * 50

$errors = @()
$warnings = @()
$success = @()

# Test 1: V√©rifier UIManager.js
Write-Host "`n1. V√©rification UIManager.js..." -ForegroundColor Yellow
$uiManagerPath = "js/managers/UIManager.js"

if (Test-Path $uiManagerPath) {
    $content = Get-Content $uiManagerPath -Raw
    
    # V√©rifier l'ID custom-length-z
    if ($content -match 'id="custom-length-z"') {
        $success += "‚úÖ ID custom-length-z trouv√© dans UIManager.js"
    } else {
        $errors += "‚ùå ID custom-length-z non trouv√© dans UIManager.js"
    }
    
    # V√©rifier l'utilisation de dims.z
    if ($content -match 'element\.dims\.z' -and $content -match 'custom-length-z') {
        $success += "‚úÖ Utilisation de element.dims.z avec custom-length-z"
    } else {
        $errors += "‚ùå element.dims.z non utilis√© avec custom-length-z"
    }
    
    # V√©rifier le commentaire axe Z
    if ($content -match 'axe Z' -or $content -match 'Z-axis') {
        $success += "‚úÖ Commentaires mis √† jour pour axe Z"
    } else {
        $warnings += "‚ö†Ô∏è Commentaires pour axe Z √† v√©rifier"
    }
} else {
    $errors += "‚ùå Fichier UIManager.js non trouv√©"
}

# Test 2: V√©rifier le fichier de test
Write-Host "`n2. V√©rification test-hourdis-custom-length.html..." -ForegroundColor Yellow
$testPath = "test-hourdis-custom-length.html"

if (Test-Path $testPath) {
    $content = Get-Content $testPath -Raw
    
    # V√©rifier customZLength
    if ($content -match 'customZLength') {
        $success += "‚úÖ Param√®tre customZLength trouv√© dans le test"
    } else {
        $errors += "‚ùå Param√®tre customZLength non trouv√© dans le test"
    }
    
    # V√©rifier valeur par d√©faut 13
    if ($content -match 'value="13"') {
        $success += "‚úÖ Valeur par d√©faut 13 configur√©e"
    } else {
        $warnings += "‚ö†Ô∏è Valeur par d√©faut 13 √† v√©rifier"
    }
    
    # V√©rifier texte axe Z
    if ($content -match 'axe Z') {
        $success += "‚úÖ Texte d'aide mis √† jour pour axe Z"
    } else {
        $warnings += "‚ö†Ô∏è Texte d'aide pour axe Z √† v√©rifier"
    }
} else {
    $errors += "‚ùå Fichier de test non trouv√©"
}

# Test 3: V√©rifier la documentation
Write-Host "`n3. V√©rification documentation..." -ForegroundColor Yellow
$docPaths = @(
    "HOURDIS-CUSTOM-LENGTH-IMPLEMENTATION.md",
    "HOURDIS-IMPLEMENTATION-SUMMARY.md"
)

foreach ($docPath in $docPaths) {
    if (Test-Path $docPath) {
        $content = Get-Content $docPath -Raw
        
        if ($content -match 'axe Z' -or $content -match 'Z-axis') {
            $success += "‚úÖ Documentation $docPath mise √† jour pour axe Z"
        } else {
            $warnings += "‚ö†Ô∏è Documentation $docPath - axe Z √† v√©rifier"
        }
        
        if ($content -match '13cm' -or $content -match '13 cm') {
            $success += "‚úÖ Valeur par d√©faut 13cm dans $docPath"
        } else {
            $warnings += "‚ö†Ô∏è Valeur par d√©faut 13cm √† v√©rifier dans $docPath"
        }
    } else {
        $warnings += "‚ö†Ô∏è Fichier de documentation $docPath non trouv√©"
    }
}

# Test 4: V√©rifier ElementsLibrary.js
Write-Host "`n4. V√©rification ElementsLibrary.js..." -ForegroundColor Yellow
$libPath = "js/managers/ElementsLibrary.js"

if (Test-Path $libPath) {
    $content = Get-Content $libPath -Raw
    
    if ($content -match 'customLength: true') {
        $success += "‚úÖ Configuration customLength trouv√©e dans ElementsLibrary.js"
    } else {
        $errors += "‚ùå Configuration customLength non trouv√©e"
    }
    
    # V√©rifier les dimensions Hourdis
    if ($content -match 'z: 13') {
        $success += "‚úÖ Dimension Z: 13 configur√©e pour Hourdis"
    } else {
        $warnings += "‚ö†Ô∏è Dimension Z: 13 √† v√©rifier pour Hourdis"
    }
} else {
    $errors += "‚ùå Fichier ElementsLibrary.js non trouv√©"
}

# Affichage des r√©sultats
Write-Host "`nüìä R√âSULTATS DE LA VALIDATION" -ForegroundColor Cyan
Write-Host "=" * 50

if ($success.Count -gt 0) {
    Write-Host "`n‚úÖ SUCC√àS ($($success.Count)):" -ForegroundColor Green
    foreach ($item in $success) {
        Write-Host "  $item" -ForegroundColor Green
    }
}

if ($warnings.Count -gt 0) {
    Write-Host "`n‚ö†Ô∏è AVERTISSEMENTS ($($warnings.Count)):" -ForegroundColor Yellow
    foreach ($item in $warnings) {
        Write-Host "  $item" -ForegroundColor Yellow
    }
}

if ($errors.Count -gt 0) {
    Write-Host "`n‚ùå ERREURS ($($errors.Count)):" -ForegroundColor Red
    foreach ($item in $errors) {
        Write-Host "  $item" -ForegroundColor Red
    }
}

# R√©sum√© final
Write-Host "`nüéØ R√âSUM√â FINAL" -ForegroundColor Cyan
if ($errors.Count -eq 0) {
    Write-Host "‚úÖ Impl√©mentation de l'axe Z valid√©e avec succ√®s!" -ForegroundColor Green
    if ($warnings.Count -gt 0) {
        Write-Host "‚ö†Ô∏è Quelques avertissements √† v√©rifier manuellement." -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ùå Des erreurs critiques ont √©t√© d√©tect√©es." -ForegroundColor Red
    Write-Host "üìù Veuillez corriger les erreurs avant de continuer." -ForegroundColor Yellow
}

Write-Host "`nüîß √âTAPES SUIVANTES RECOMMAND√âES:" -ForegroundColor Cyan
Write-Host "1. Tester l'interface dans l'application principale" -ForegroundColor White
Write-Host "2. V√©rifier le test unitaire test-hourdis-custom-length.html" -ForegroundColor White
Write-Host "3. Valider le scaling sur axe Z en mode visuel" -ForegroundColor White
Write-Host "4. Tester avec diff√©rentes valeurs (10, 20, 50 cm)" -ForegroundColor White

exit $errors.Count
